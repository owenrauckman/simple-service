const { gql } = require('apollo-server');


const typeDefs = gql`
  type Query {
    user(username: String!): [User!]
    organization(username: String!): [Organization!]
    search(query: String!, type: SearchType, category: String, state: String, city: String, zip: Int, searchRadius: Int, remote: Boolean): [UserSearchResult!]
  }

  # this is the same for needs and abilities
  type Offering {
    id: ID!
    title: String!
    categories: [String!]
    searchable: Boolean!
    remote: Boolean!
    description: String!
    startDate: String!
    endDate: String!
  }

  # part of user, todo: break out schemas into folders
  type Location {
    state: String!
    city: String!
    zip: Int!
    helpRadius: Int!
  }

  type Review {
    _id: ID!
    rating: Int!
    reviewer: String!
    description: String!
    date: String!
  }

  # similar to User, but without extra data, revisit later
  type UserSearchResult {
    _id: ID!
    name: String!
    username: String!
    location: Location!
  }

  type User {
    _id: ID!
    name: String!
    username: String!
    avatar: String!
    about: String!
    industries: [String!]
    organizations: [String!]
    reviews: [Review!]
    needs: [Offering!]
    abilities: [Offering!]
    location: Location!
  }

  type Organization {
    _id: ID!
    name: String!
    username: String!
    avatar: String!
    about: String!
    industries: [String!]
    location: Location!
    members: [UserSearchResult!]
    reviews: [Review!]
    # membership: Membership! <-- post MVP
  }

  enum SearchType{
    NEED
    ABILITY
  }
`;

module.exports = typeDefs;
